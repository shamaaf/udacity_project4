name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  NODE_VERSION: '18.x'

jobs:
  Lint:
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Checkout Run Lint
      run: cd starter/frontend && npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Test
      run: cd starter/frontend && npm run test


  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1  

    - name: Login to Amazon 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name udacityproject4 --region us-east-1

    - name: Display application URLs
        id: get_be_service_url
        run: |
          cd starter/frontend/k8s
          kubectl get svc -A
          BE_SERVICE_URL=$(kubectl get svc backend -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "BE_SERVICE_URL=${BE_SERVICE_URL}"
          echo "::set-output name=be_service_url::${BE_SERVICE_URL}"  

    - name: Build, tag, and push image to Amazon ECR
      working-directory: starter/frontend
      env:
        IMAGE_TAG: latest
        REPO_NAME: project4_frontend
      run: |
        echo "Using BE_SERVICE_URL=${{ steps.get_be_service_url.outputs.be_service_url }}"
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://${{ steps.get_be_service_url.outputs.be_service_url }} --tag=362093802659.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker tag frontend:362093802659.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        docker push 362093802659.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG    

    - name: Configure Kubeconfig
      run:
       aws eks update-kubeconfig --name udacityproject4 --region us-east-1


    - name: Set image tag and apply to cluster
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: project4_frontend
      run: |
          kustomize edit set image frontend=362093802659.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -

    - name: Display application URLs       
        run: |
          cd starter/frontend/k8s
          kubectl get svc -A