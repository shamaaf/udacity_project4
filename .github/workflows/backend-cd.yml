name: Backend Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/backend/**'  

env:
  PYTHON_VERSION: '3.10'      

jobs:
  Lint:
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Rependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Checkout Lint Code
      run: cd starter/backend && pipenv run lint

  Test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Python
      uses:  actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Dependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run Tests
      run: cd starter/backend && pipenv install pytest && pipenv run test

      
  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1
        
    - name: Login to Amazon
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      working-directory: starter/backend
      env:
        IMAGE_TAG: latest
        REPO_NAME: project4_backend
      run: |
        docker build -t backend:${IMAGE_TAG} .
        docker tag backend:${IMAGE_TAG} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG

    - name: Update Kubeconfig
      run:
       aws eks update-kubeconfig --name udacityproject4  --region us-east-1

    - name: Set image tag and apply to cluster
      working-directory: starter/backend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: project4_backend
      run: |
        cd starter/backend/k8s
        kustomize edit set image backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        kustomize build | kubectl apply -f -

    - name: Display application URL      
      run: |
        cd starter/backend/k8s
        kubectl get svc -A    
